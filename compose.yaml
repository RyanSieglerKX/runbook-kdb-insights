---
networks:
  kx:
    name: kx
    driver: bridge

services:
  # # Moved to compose-stream.yaml to separate streaming from the main architecture
  # sp-worker:
  #   image: ${kxi_img_sp}
  #   hostname: kxi-sp
  #   restart: "always"
  #   depends_on:
  #     - kxi-rt   
  #   environment:
  #     - KXI_LOG_LEVELS=default:info       
  #     - KXI_SP_SPEC=/mnt/config/sp/taq.py  # Python file where our Kafka stream is coming from
  #     - KXI_PORT=${kxi_port_sp}
  #     - KX_KURL_DISABLE_AUTO_REGISTER=1
  #     - RT_TOPIC_PREFIX=rt-
  #     - RT_STREAM=data
  #   ports:
  #     - ${kxi_port_sp}:${kxi_port_sp}
  #   volumes:
  #     - ${kxi_dir_lic}:/opt/kx/lic 
  #     - ${kxi_dir_config}:/mnt/config 
  #     - ${kxi_dir_logs_sp}:/sp 
  #   networks: [kx]
  #   env_file:
  #     - .env 
  #   stdin_open: true
  #   tty: true     

  kxi-rc:
    image: ${kxi_img_rc}
    hostname: kxi-rc
    environment:
      - KXI_NAME=kxi-rc
      - KXI_PORT=${kxi_port_rc}
      - KXI_LOG_FORMAT=${kxi_log_format}
      - KXI_LOG_LEVELS=default:${kxi_log_level}
      - KXI_ALLOWED_SBX_APIS=${kxi_apis}
      - KXI_CONFIG_FILE=/mnt/config/metrics/sidecar/rc-config.json
    networks: [kx]
    volumes:
      - ${kxi_dir_lic}:/opt/kx/lic
      - ${kxi_dir_config}:/mnt/config

  kxi-agg:
    image: ${kxi_img_agg}
    environment:
      - KXI_NAME=kxi-agg
      - KXI_PORT=${kxi_port_agg}
      - KXI_SG_RC_ADDR=kxi-rc:${kxi_port_rc}
      #- KXI_CUSTOM_FILE=/mnt/config/src/agg/custom.q  # Optional for custom APIs
      - KXI_LOG_FORMAT=${kxi_log_format}
      - KXI_LOG_LEVELS=default:${kxi_log_level}
      # Package with custom APIs
      - KXI_PACKAGES=custom:1.0.0
      - KX_PACKAGE_PATH=/opt/kx/packages/
      - KXI_CONFIG_FILE=/mnt/config/metrics/sidecar/agg-config.json       # For gathering metrics
    deploy:  # Optional: deploy multiple replicas.
      mode: replicated
      replicas: 1
    networks: [kx]
    volumes:
      - ${kxi_dir_config}:/mnt/config
      - ${kxi_dir_lic}:/opt/kx/lic
      - ${kxi_dir_pkgs}:/opt/kx/packages

  kxi-gw:
    image: ${kxi_img_gw}
    hostname: kxi-gw
    environment:
      - KXI_SG_METRICS_ENABLED=true
      - KXI_SG_METRICS_PORT=8081 
      - KXI_SG_METRICS_ENDPOINT=/metrics  
      - GATEWAY_QIPC_PORT=${kxi_port_gw_qipc}
      - GATEWAY_HTTP_PORT=${kxi_port_gw_http}
      - KXI_SG_RC_ADDR=kxi-rc:${kxi_port_rc}
      - KXI_LOG_FORMAT=${kxi_log_format}
      - KXI_LOG_LEVELS=default:${kxi_log_level}
    ports:
      - ${kxi_port_gw_qipc}:${kxi_port_gw_qipc}
      # - ${kxi_port_gw_http}:${kxi_port_gw_http}
      - ${kxi_port_gw_metrics}:${kxi_port_gw_metrics}
    deploy:  # Optional: deploy multiple replicas.
      mode: replicated
      replicas: 1
    networks: [kx]

  kxi-da:
    hostname: kxi-da
    image: ${kxi_img_da}
    #depends_on:
      #- kxi-sm
    environment:
      - KXI_NAME=kxi-da
      - KXI_SC=dap
      - KXI_PORT=${kxi_port_da}
      - KXI_ASSEMBLY_FILE=/mnt/config/assembly.yaml
      - KXI_SG_RC_ADDR=kxi-rc:${kxi_port_rc}
      - KXI_SM_ADDR=kxi-sm:${kxi_port_sm}
      #- KXI_CUSTOM_FILE=/mnt/config/src/da/custom.api.q  # Optional for custom APIs
      - KXI_LOG_FORMAT=${kxi_log_format}
      - KXI_LOG_LEVELS=default:${kxi_log_level}
      - KXI_ALLOWED_SBX_APIS=${kxi_apis}
      - RT_LOG_PATH=/mnt/logs/da
      - RT_TOPIC_PREFIX=rt-
      - RT_REPLICAS=1
      - KXI_SECURE_ENABLED=0
      - KXI_LATE_DATA=true
      - KXI_CONFIG_FILE=/mnt/config/metrics/sidecar/da-config.json      # For gathering metrics
      #- KXI_DA_START_SIDECARS=true
      # Package with custom APIs 
      - KXI_PACKAGES=custom:1.0.0
      - KX_PACKAGE_PATH=/opt/kx/packages
    networks: [kx]
    volumes:
      - ${kxi_dir_config}:/mnt/config
      - ${kxi_dir_db}:/mnt/db
      - ${kxi_dir_logs}:/mnt/logs
      - ${kxi_dir_lic}:/opt/kx/lic
      - ${kxi_dir_pkgs}:/opt/kx/packages
    ports:
      - ${kxi_port_da}:${kxi_port_da}
      - ${kxi_port_da_rdb}:${kxi_port_da_rdb}
      - ${kxi_port_da_idb}:${kxi_port_da_idb}
      - ${kxi_port_da_hdb}:${kxi_port_da_hdb}

  kxi-sm:
    hostname: kxi-sm
    image: ${kxi_img_sm}
    #command: -p 10001
    environment:
      - KXI_NAME=kxi-sm
      - KXI_SC=sm
      - KXI_PORT=${kxi_port_sm}
      - KXI_ASSEMBLY_FILE=/mnt/config/assembly.yaml
      - KXI_LOG_FORMAT=${kxi_log_format}
      - KXI_LOG_LEVELS=default:${kxi_log_level}
      - KXI_RT_SM_LOG_PATH=/mnt/logs/sm
      - KXI_RT_EOI_LOG_PATH=/mnt/logs/eoi
      - KXI_CONFIG_FILE=/mnt/config/metrics/sidecar/sm-config.json           # For gathering metrics
      - RT_TOPIC_PREFIX=rt-
      - RT_STREAM=data
      - RT_LOG_PATH=/mnt/logs/sm   
      - RT_REPLICAS=1
      - KXI_LATE_DATA=true
    ports:
      - ${kxi_port_sm}:${kxi_port_sm}
    networks: [kx]
    volumes:
      - ${kxi_dir_db}:/mnt/db
      - ${kxi_dir_logs}:/mnt/logs
      - ${kxi_dir_config}:/mnt/config
      - ${kxi_dir_lic}:/opt/kx/lic

  kxi-rt:
    image: ${kxi_img_rt}
    # Need to set hostname so rt nodes/publishers/subcribers can find each other
    hostname: rt-data-0
    command: [
      '-p', '${kxi_port_rt}', '-in', '/s/in', '-out', '/s/out', '-cp',
      '/s/state', '-size', '${kxi_rt_replicas}', '-limit', '${kxi_rt_limit}',
      '-time', '${kxi_rt_time}', '-disk', '${kxi_rt_disk}'
    ]
    environment:
      - RT_EXPORT_METRIC="0"
      - RT_TOPIC_PREFIX=rt-
      - RT_EXTERN_PREFIX=rt-
      - RT_SINK=data
      - RT_STREAM=data
      - RT_LOGLEVEL_CONSOLE=${kxi_log_level}
      - RT_QURAFT_LOG_LEVEL=${kxi_log_level}
      - RT_SEQ_SESSION_PATH=/s/session
      - RAFT_HEARTBEAT=${kxi_rt_heartbeat}
      - RAFT_LOG_SIZE=${kxi_rt_log_size}
      - RAFT_CHUNK_SIZE=${kxi_rt_chunk_size}
    ports:
      - ${kxi_port_rt}:${kxi_port_rt}
      - ${kxi_port_rt_pull_rep}:${kxi_port_rt_pull_rep}
      - ${kxi_port_rt_push_rep}:${kxi_port_rt_push_rep}
    restart: unless-stopped
    networks: [kx]
    volumes:
      - ${kxi_dir_logs_rt}:/s   
      - ${kxi_dir_lic}:/opt/kx/lic
    user: root